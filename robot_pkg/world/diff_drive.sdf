<?xml version="1.0" ?>
<sdf version="1.9">
    <world name="car_world">
        <!-- Physics settings -->
        <physics name="1ms" type="ignored">
            <max_step_size>0.001</max_step_size>
            <real_time_factor>1.0</real_time_factor>
        </physics>

        <!-- Plugins for simulation and scene -->
        <plugin
        filename="gz-sim-physics-system"
        name="gz::sim::systems::Physics">
        </plugin>
        <plugin
        filename="gz-sim-sensors-system"
        name="gz::sim::systems::Sensors">
        <render_engine>ogre2</render_engine>
        </plugin>
        <plugin
        filename="gz-sim-scene-broadcaster-system"
        name="gz::sim::systems::SceneBroadcaster">
        </plugin>
        <plugin
        filename="gz-sim-user-commands-system"
        name="gz::sim::systems::UserCommands">
        </plugin>
        <plugin
        filename="BasicSystem"
        name="ros_gz_example_gazebo::BasicSystem">
        </plugin>
        <plugin
        filename="FullSystem"
        name="ros_gz_example_gazebo::FullSystem">
        </plugin>

        <!-- Sunlight -->
        <light type="directional" name="sun">
            <cast_shadows>true</cast_shadows>
            <pose>0 0 10 0 0 0</pose>
            <diffuse>0.8 0.8 0.8 1</diffuse>
            <specular>0.2 0.2 0.2 1</specular>
            <attenuation>
                <range>1000</range>
                <constant>0.9</constant>
                <linear>0.01</linear>
                <quadratic>0.001</quadratic>
            </attenuation>
            <direction>-0.5 0.1 -0.9</direction>
        </light>

        <!-- Ground plane -->
        <model name="ground_plane">
            <static>true</static>
            <link name="link">
                <collision name="collision">
                    <geometry>
                        <plane>
                            <normal>0 0 1</normal>
                        </plane>
                    </geometry>
                </collision>
                <visual name="visual">
                    <geometry>
                        <plane>
                            <normal>0 0 1</normal>
                            <size>100 100</size>
                        </plane>
                    </geometry>
                    <material>
                        <ambient>0.8 0.8 0.8 1</ambient>
                        <diffuse>0.8 0.8 0.8 1</diffuse>
                        <specular>0.8 0.8 0.8 1</specular>
                    </material>
                </visual>
            </link>
        </model>

        <!-- Include vehicle_white model -->
        
        <model name="vehicle_white">
            <self_collide>true</self_collide>
            <pose>0 0 0.0 0 0 0</pose>
            <include merge="true">
                <uri>/robot_ws/src/robot_pkg/models/vehicle_white</uri>
                <!--<uri>package://robot_pkg/models/diff_robot</uri>-->
            </include>

            <plugin
                filename="gz-sim-joint-state-publisher-system"
                name="gz::sim::systems::JointStatePublisher">
            </plugin>

            <plugin
                filename="gz-sim-pose-publisher-system"
                name="gz::sim::systems::PosePublisher">
                <publish_link_pose>true</publish_link_pose>
                <use_pose_vector_msg>true</use_pose_vector_msg>
                <static_publisher>true</static_publisher>
                <static_update_frequency>1</static_update_frequency>
            </plugin>

            <plugin
                filename="gz-sim-odometry-publisher-system"
                name="gz::sim::systems::OdometryPublisher">
                <odom_frame>vehicle_white/odom</odom_frame>
                <robot_base_frame>vehicle_white</robot_base_frame>
            </plugin>

        </model>

        <!-- Moving Forward-->
        <plugin filename="gz-sim-triggered-publisher-system"
                name="gz::sim::systems::TriggeredPublisher">
            <input type="gz.msgs.Int32" topic="/keyboard/keypress">
                <match field="data">16777235</match><!-- Upwards Arrow ⬆ -->
            </input>
            <output type="gz.msgs.Twist" topic="/cmd_vel">
                linear: {x: 0.5}, angular: {z: 0.0}
            </output>
        </plugin>
        <!-- Moving Backward-->
        <plugin filename="gz-sim-triggered-publisher-system"
                name="gz::sim::systems::TriggeredPublisher">
            <input type="gz.msgs.Int32" topic="/keyboard/keypress">
                <match field="data">16777237</match><!--Downwards Arrow -->
            </input>
            <output type="gz.msgs.Twist" topic="/cmd_vel">
                linear: {x: -0.5}, angular: {z: 0.0}
            </output>
        </plugin>
        <!-- Moving Right-->
        <plugin filename="gz-sim-triggered-publisher-system"
                name="gz::sim::systems::TriggeredPublisher">
            <input type="gz.msgs.Int32" topic="/keyboard/keypress">
                <match field="data">16777236</match><!--  →	Rightwards Arrow -->
            </input>
            <output type="gz.msgs.Twist" topic="/cmd_vel">
                linear: {x: 0.0}, angular: {z: -0.5}
            </output>
        </plugin>
        <!-- Moving Left-->
        <plugin filename="gz-sim-triggered-publisher-system"
                name="gz::sim::systems::TriggeredPublisher">
            <input type="gz.msgs.Int32" topic="/keyboard/keypress">
                <match field="data">16777234</match><!--  ←	Leftwards Arrow -->
            </input>
            <output type="gz.msgs.Twist" topic="/cmd_vel">
                linear: {x: 0.0}, angular: {z: 0.5}
            </output>
        </plugin>

        <!-- Stop-->
        <plugin filename="gz-sim-triggered-publisher-system"
                name="gz::sim::systems::TriggeredPublisher">
            <input type="gz.msgs.Int32" topic="/keyboard/keypress">
                <match field="data">75</match>  <!--K -->
            </input>
            <output type="gz.msgs.Twist" topic="/cmd_vel">
                linear: {x: 0.0}, angular: {z: 0.0}
            </output>
        </plugin>  

    </world>
</sdf>
